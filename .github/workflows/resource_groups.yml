name: Terraform - Resource Groups
on:
  push:
    branches:
      - main
    paths:
      - 'resource_groups/**'

env:
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}

jobs:
  manage_vm:
    name: Terraform VM config
    strategy:
      matrix:
         folder: [resource_groups]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4

      - name: Check runner
        run: sudo apt-get update && sudo apt-get install -y gnupg software-properties-common
      
      - name: Fetch gpg key
        run: curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo gpg --yes --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
      
      - name: Add Hashicorp repo
        run: echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list > /dev/null
      
      - name: Install Terraform
        run: sudo apt-get update && sudo apt-get install terraform -y && terraform version
      
      - name: Terraform init
        working-directory: ${{ matrix.folder }}
        run: |
          terraform init -input=false \
          -backend-config "container_name=${{ vars.CONTAINER_NAME }}" \
          -backend-config "key=${{ vars.BACKEND_RSG_KEY }}"

      - name: Terraform Validate ${{ matrix.folder }}
        id: validate
        working-directory: ${{ matrix.folder }}
        run: terraform validate

      - name: Terraform Plan ${{ matrix.folder }}
        id: plan
        working-directory: ${{ matrix.folder }}
        run: |
          terraform plan -input=false -no-color -lock=false -out=vsphere.tfplan

      - name: Terraform Apply
        working-directory: ${{ matrix.folder }}
        run: terraform apply -input=false -auto-approve vsphere.tfplan
